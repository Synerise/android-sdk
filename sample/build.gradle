apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'org.sonarqube'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 30
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        applicationId "com.synerise.sample"
        versionCode 110
        versionName "4.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    signingConfigs {
        releaseConfig {
            keyAlias keystoreProperties['syneriseSampleKeyAlias']
            keyPassword keystoreProperties['syneriseSampleKeyPassword']
            storeFile file(rootDir.getCanonicalPath() + '/' + keystoreProperties['syneriseSampleKeyStore'])
            storePassword keystoreProperties['syneriseSampleStorePassword']
        }
        developmentConfig {
            keyAlias "debugKey"
            keyPassword "testtest"
            storeFile file("../debug_key.jks")
            storePassword "testtest"
        }
    }
    productFlavors {
        flavorDimensions "mode"
        dev {
            applicationId "com.synerise.sdk.sample.dev"
            dimension "mode"
        }
        prod {
            applicationId "com.synerise.sdk.sample"
            dimension "mode"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.developmentConfig
        }
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

ext {
    daggerVersion = '2.16'
    syneriseVersion = '4.0.0'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // Support
    implementation rootProject.ext.supportAnnotations
    implementation rootProject.ext.supportV4
    implementation rootProject.ext.appCompatV7
    implementation rootProject.ext.recycler
    implementation rootProject.ext.cardView
    implementation rootProject.ext.design
    // RxJava
    implementation rootProject.ext.rxAndroid
    // OkHttp
    implementation rootProject.ext.okhttp3
    implementation rootProject.ext.okhttp3Interceptor
    // Retrofit
    implementation rootProject.ext.retrofit2
    implementation rootProject.ext.retrofit2Converter
    implementation rootProject.ext.retrofit2Adapter
    // MultiDex
    implementation 'androidx.multidex:multidex:2.0.1'
    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    // Synerise
    implementation "com.synerise.sdk:synerise-mobile-sdk:$syneriseVersion"
    // Facebook
    implementation 'com.facebook.android:facebook-login:4.41.0'
    // Firebase
    implementation 'com.google.firebase:firebase-messaging:20.1.0'
    implementation 'com.google.firebase:firebase-core:17.2.2'
    // Google Play Services
    implementation 'com.google.android.gms:play-services-vision:19.0.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    // UI
    implementation 'com.facebook.fresco:fresco:2.0.0'
    implementation 'com.chaos.view:pinview:1.3.2'
    // Process Phoenix
    implementation 'com.jakewharton:process-phoenix:2.0.0'
    // Test
    implementation 'androidx.test.espresso:espresso-idling-resource:3.1.0'
    testImplementation rootProject.ext.junit
    androidTestImplementation rootProject.ext.supportTestRunner
    androidTestImplementation rootProject.ext.espressoCore
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.1.0') {
        // needed for PickedActions class used in TrackerViewActivityTest
        exclude group: 'com.android.support', module: 'appcompat'
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
        exclude module: 'support-v13'
        exclude module: 'recyclerview-v7'
        exclude module: 'appcompat-v7'
    }
}

def getLocalProperty(String propertyName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[propertyName]
    } else {
        return ""
    }
}

apply plugin: 'com.google.gms.google-services' // get `google-services.json` from Firebase console first

